<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>quantum error correction on Yale Undergraduate Quantum Computing</title>
    <link>https://yaleqc.com/tags/quantum-error-correction/</link>
    <description>Recent content in quantum error correction on Yale Undergraduate Quantum Computing</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 21 Feb 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://yaleqc.com/tags/quantum-error-correction/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Quantum Error Correction Study Group</title>
      <link>https://yaleqc.com/p/quantum-error-correction-study-group/</link>
      <pubDate>Sun, 21 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yaleqc.com/p/quantum-error-correction-study-group/</guid>
      <description>About This project was started during the Spring semester of 2021, and the original project proposal can be found here. During this semester, a team of two members created a presentation on a topic related to quantum error correction each week. Going into the summmer, we will switch to a reading group format. Each week we wil have a reading addressing an aspect of quantum error correction. With the help of our graduate student mentor Alec, we will break down challenging topics, with the goal of gaining familiarity with the language and concepts of the field.</description>
    </item>
    
    <item>
      <title>Qiskit Surface Code Encoder and MWPM Decoder</title>
      <link>https://yaleqc.com/p/qiskit-surface-code-encoder-and-mwpm-decoder/</link>
      <pubDate>Wed, 11 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yaleqc.com/p/qiskit-surface-code-encoder-and-mwpm-decoder/</guid>
      <description>Status This open-source package was presented at the November 2020 Qiskit Advocate Demo Session and is pending official incorporating into Qiskit Ignis. Our ultimate goal is to create general Topological Code interfaces, with sepecific implementations using the CSS (XXXX/ZZZZ) surface code, XZZX surface code, and repetition code,
 About We are building Encoder and Minimum Weight Perfect Matching Graph Decoder tools for serveral Topological Codes we wish to implement in Qiskit Ignis.</description>
    </item>
    
  </channel>
</rss>
